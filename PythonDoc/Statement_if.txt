* Python If ... Else:
=====================

* Python supports the usual logical conditions from mathematics:

* conditions: ==,!=,>,<,>=,<=

These conditions can be used in several ways, most commonly in "if statements" and loops.

* An "if statement" is written by using the if keyword.

Eg:

a = 33
b = 200
if b > a:
  print("b is greater than a")

* Elif:
=======

* The elif keyword is pythons way of saying "if the previous conditions were not true, then try this condition".

Eg:

a = 33
b = 33
if b > a:
  print("b is greater than a")
elif a == b:
  print("a and b are equal")

* Else:
=======
* The else keyword catches anything which isn't caught by the preceding conditions.

Eg:

a = 200
b = 33
if b > a:
  print("b is greater than a")
elif a == b:
  print("a and b are equal")
else:
  print("a is greater than b")

* And:
======

* The and keyword is a logical operator, and is used to combine conditional statements:

Eg:

* Test if a is greater than b, AND if c is greater than a:

a = 200
b = 33
c = 500
if a > b and c > a:
  print("Both conditions are True")

* Or:
=====

* The or keyword is a logical operator, and is used to combine conditional statements:

a = 200
b = 33
c = 500
if a > b or a > c:
  print("At least one of the conditions is True")

* Nested If:
============

* You can have if statements inside if statements, this is called nested if statements.

Eg:


x = 41

if x > 10:
  print("Above ten,")
  if x > 20:
    print("and also above 20!")
  else:
    print("but not above 20.")

* The pass Statement:
=====================

* if statements cannot be empty, but if you for some reason have an if statement with no content, put in the pass statement to avoid getting an error.

Eg:

a = 33
b = 200

if b > a:
  pass

  



