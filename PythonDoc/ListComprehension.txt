* List Comprehension:
=====================

* List comprehension is an elegant way to define and create list in Python.
* List comprehensions are used for creating new lists from other iterables.
* As list comprehensions returns lists, they consist of brackets containing the expression, which is executed for each element along with the for loop to iterate over each element.

* The basic syntax:

new_list = [expression for_loop_one_or_more conditions]

Eg:


numbers = [1, 2, 3, 4]
squares = []

for n in numbers:
  squares.append(n**2)

print(squares)  # Output: [1, 4, 9, 16]

or 

numbers = [1, 2, 3, 4]
squares = [n**2 for n in numbers]


* Dealing with strings:
=======================

Eg:
*  Can make a new list of friends whose name starts with S

Eg:

friends = ["Rolf", "Sam", "Samantha", "Saurabh", "Jen"]
starts_s = []

for friend in friends:
    if friend.startswith("S"):
        starts_s.append(friend)

print(starts_s)

or 



friends = ["Rolf", "Sam", "Samantha", "Saurabh", "Jen"]
starts_s = [friend for friend in friends if friend.startswith("S")]


print(friends)
print(starts_s)
print(friends is starts_s)
print("friends: ", id(friends), " starts_s: ", id(starts_s))



